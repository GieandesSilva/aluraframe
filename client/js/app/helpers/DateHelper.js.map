{"version":3,"sources":["../../app-es6/helpers/DateHelper.js"],"names":["DateHelper","Error","data","getDate","getMonth","getFullYear","texto","test","Date","split","reverse","map","item","indice","dataDia","match","dataDiaMes","dataAno","dataMes","toString","texto2"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCACaA,U;AAET,sCAAa;AAAA;;AACT,0BAAM,IAAIC,KAAJ,CAAU,qCAAV,CAAN,CADS,CAC+C;AAC3D;;;;kDAEoBC,I,EAAM;AAAE;;AAEzB,+BAAUA,KAAKC,OAAL,EAAV,UAA4BD,KAAKE,QAAL,KAAgB,CAA5C,UAAiDF,KAAKG,WAAL,EAAjD;AACA;AACA;AACA;AAEH;;;kDAEoBC,K,EAAM;;AAEvB,4BAAG,CAAC,0BAA0BC,IAA1B,CAA+BD,KAA/B,CAAJ,EAEI,MAAM,IAAIL,KAAJ,CAAU,4CAAV,CAAN;;AAEJ,4BAAG,wBAAwBM,IAAxB,CAA6BD,KAA7B,CAAH,EAAwC;;AAEpC,sEAAWE,IAAX,mCAAmBF,MAAMG,KAAN,CAAY,IAAZ,EAAkBC,OAAlB,GAA4BC,GAA5B,CAAgC,UAACC,IAAD,EAAOC,MAAP;AAAA,uCAAkBD,OAAOC,SAAS,CAAlC;AAAA,6BAAhC,CAAnB;AACA;AACA;AACA;AAEH,yBAPD,MAOM,IAAG,oBAAoBN,IAApB,CAAyBD,KAAzB,CAAH,EAAmC;;AAErC,gCAAIQ,UAAUR,MAAMS,KAAN,CAAY,OAAZ,CAAd;AACA,gCAAIC,aAAaV,MAAMS,KAAN,CAAY,OAAZ,CAAjB;AACA,gCAAIE,UAAUX,MAAMS,KAAN,CAAY,QAAZ,CAAd;AACA,gCAAIG,UAAUF,WAAWG,QAAX,GAAsBJ,KAAtB,CAA4B,QAA5B,CAAd;AACA,gCAAIK,SAAYN,QAAQK,QAAR,EAAZ,SAAkCD,QAAQC,QAAR,EAAlC,SAAyDF,QAAQE,QAAR,EAA7D;;AAEA,sEAAWX,IAAX,mCAAmBY,OAAOX,KAAP,CAAa,GAAb,EAAkBC,OAAlB,GAA4BC,GAA5B,CAAgC,UAACC,IAAD,EAAOC,MAAP;AAAA,uCAAkBD,OAAOC,SAAS,CAAlC;AAAA,6BAAhC,CAAnB;AACA;AACA;AACA;AAEH;AACJ","file":"DateHelper.js","sourcesContent":["\r\nexport class DateHelper {\r\n\r\n    constructor(){\r\n        throw new Error(\"DateHelper não pode ser instanciada\"); // throw lança um erro, retornando o parâmetro descrito.\r\n    }\r\n    \r\n    static dataParaTexto(data) { // static Permite o acesso direto ao método através da classe, não necessitando ser instânciada\r\n       \r\n        return `${data.getDate()}/${data.getMonth()+1}/${data.getFullYear()}`;\r\n        //data.getDate()\r\n        //+ '/' + (data.getMonth() +1)\r\n        //+ '/' + data.getFullYear();\r\n    \r\n    }\r\n\r\n    static textoParaData(texto){\r\n        \r\n        if(!/^\\d{2}\\/?\\d{2}\\/?\\d{4}$/.test(texto))\r\n\r\n            throw new Error(\"A data precisa estar no formato dd/mm/aaaa\");\r\n        \r\n        if(/^\\d{2}\\/\\d{2}\\/\\d{4}$/.test(texto)) {\r\n\r\n            return new Date(...texto.split('\\/').reverse().map((item, indice) => item - indice % 2)); \r\n            // Remove os ítens e os coloca separadamente em cada posição do Array\r\n            // .map navega pelo array passando o conteúdo, a => é uma Arrow Function. \r\n            // Quando tem apenas uma linha de código, pode ser construída dessa forma.\r\n\r\n        }else if(/^\\d{2}\\d{2}\\d{4}$/.test(texto)){\r\n\r\n            let dataDia = texto.match(/\\d{2}/);\r\n            let dataDiaMes = texto.match(/\\d{4}/);\r\n            let dataAno = texto.match(/\\d{4}$/);\r\n            let dataMes = dataDiaMes.toString().match(/\\d{2}$/);\r\n            let texto2 = `${dataDia.toString()}/${dataMes.toString()}/${ dataAno.toString()}`;   \r\n            \r\n            return new Date(...texto2.split('/').reverse().map((item, indice) => item - indice % 2)); \r\n            // Remove os ítens e os coloca separadamente em cada posição do Array\r\n            // .map navega pelo array passando o conteúdo, a => é uma Arrow Function. \r\n            // Quando tem apenas uma linha de código, pode ser construída dessa forma.\r\n            \r\n        }\r\n    }\r\n}"]}